need to fix this step so that it does not replace the checkmark with the column's name but make it so that it keeeps the checkmarks and records the column name and PUTS the column's name OIUTSIDE of the matrix on the right side ALIGNED with the row  that the # is in but make sure that it keeps the # there and does not replace it but puts the Column name on the outside of the matrix. this is the code to fix:

    print("\nStep 2.1: Label the rows with # and put column names outside the matrix (aligned on the side of the row) then as a user mark the # with a checkmark to indicate that it has been scanned:")
        for i in range(self.rows):
            if "#" in new_matrix[i]:
                col_index = new_matrix[i].index("#")
                col_name = self.col_names[col_index]
                row_name = self.row_names[i]
                new_matrix[i][col_index] = col_name # this replaces '#' with column name
                print(f"Label row: {row_name} with the column name: {col_name}")
                print(f"{row_name}{col_name}")







//other


At this step 2.2 in the below code fix this code output right now it shows with the column name of which column name the # is in when there is a 2 in that row however it is not only showing which column name it is in but also inserting the column name in to that row. It should not insert the column name in to any row, nor should it replace the # but it should place the column name in this example 'C' out side the row so it looks like `[2, 0, #, #] C` NOT like `3 [2, 0, #, #, C]` fix the output so it looks like [2, 0, #, #] C`

        # Step 2.1
        print("\nStep 2.1: Label the rows with # and put column names outside the matrix (aligned on the side of the row) then as a user mark the # with a checkmark to indicate that it has been scanned:")
        for i in range(self.rows):
            if "#" in new_matrix[i]:
                col_index = new_matrix[i].index("#")
                col_name = self.col_names[col_index]
                row_name = self.row_names[i]
                new_matrix[i][col_index] = "#" # keep the checkmark
                print(f"Label row: {row_name} with the column name: {col_name}")
                new_matrix[i].append(col_name) # add the column name to the end of the row
                print(f"{row_name} {col_name}")
                print_matrix(new_matrix, self.row_names, self.col_names)



